// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/account": {
            "post": {
                "description": "Create Account for user with balance and currency. Need Authorization Header and currency",
                "produces": [
                    "application/json"
                ],
                "summary": "Create Account for user",
                "parameters": [
                    {
                        "description": "CreateAccount",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.Account"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/account/:id": {
            "get": {
                "description": "Get user's account by id. Need Authorization Header",
                "summary": "get user's account by id",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Delete User Account with balance and currency. Need Authorization Header and account id",
                "summary": "Delete User Account",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/account/payment": {
            "post": {
                "description": "Create Payment from account to account. Need Authorization Header and account id",
                "produces": [
                    "application/json"
                ],
                "summary": "Create Payment from account to account",
                "parameters": [
                    {
                        "description": "CreateAccountPayment",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.AccountTransaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/account/payment/:id": {
            "get": {
                "description": "Get from account to account payment. Need Authorization Header",
                "summary": "account to account payment",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/account/payments": {
            "get": {
                "description": "Get All from account to account payments. Need Authorization Header",
                "summary": "account to account payment",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/accounts": {
            "get": {
                "description": "Get user's all accounts. Need Authorization Header",
                "summary": "get user's all accounts",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/card": {
            "post": {
                "description": "Get Card data from request and create card for user. Need Authorization Header",
                "produces": [
                    "application/json"
                ],
                "summary": "Create Card for user",
                "parameters": [
                    {
                        "description": "CreateCard",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.Card"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/card/:id": {
            "put": {
                "description": "Get Card data from request and card id for update user card. Need Authorization Header",
                "produces": [
                    "application/json"
                ],
                "summary": "Update Card for user",
                "parameters": [
                    {
                        "description": "UpdateCardCard",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.Card"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Get Card id for delete user card. Need Authorization Header",
                "produces": [
                    "application/json"
                ],
                "summary": "Update Card for user",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/card/payment": {
            "post": {
                "description": "Create Payment from card to card. Need Authorization Header and Card id",
                "produces": [
                    "application/json"
                ],
                "summary": "Create Payment from card to card",
                "parameters": [
                    {
                        "description": "CreateCardPayment",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.Card"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/card/payment/:id": {
            "get": {
                "description": "Get Payments from card to card payment. Need Authorization Header",
                "summary": "card to card payment",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/card/payments": {
            "get": {
                "description": "Get Payments from card to card payments. Need Authorization Header",
                "summary": "card to card payments",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/cards": {
            "get": {
                "description": "Get user's all cards. Need Authorization Header",
                "summary": "get user's all cards",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "http.Account": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "integer"
                },
                "currency": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "http.AccountTransaction": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string"
                },
                "from_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "money": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                },
                "to_id": {
                    "type": "integer"
                }
            }
        },
        "http.Card": {
            "type": "object",
            "properties": {
                "cvc": {
                    "type": "integer"
                },
                "exp": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "requisite": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8082",
	BasePath:         "/v2",
	Schemes:          []string{},
	Title:            "Payment Service API",
	Description:      "Payment service API in Go using Gin Framework",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
