basePath: /auth
definitions:
  http.ReqLogin:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  http.RespLogin:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  http.UserRegister:
    properties:
      FirstName:
        type: string
      LastName:
        type: string
      Login:
        type: string
      Password:
        type: string
      Phone:
        type: string
      isConfirmed:
        type: boolean
    type: object
host: localhost:8081
info:
  contact: {}
  description: Auth service API in Go using Gin Framework
  title: Auth Service API
  version: "1.0"
paths:
  /confirm:
    post:
      description: Confirmation of the registered user, for further use in the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Confirm a registered user
  /login:
    post:
      description: Get login and password to get jwt token for further work in the
        system
      parameters:
      - description: Login
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.ReqLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.RespLogin'
      summary: Gets data to login in to the system
  /logout:
    delete:
      description: deletes the token from the database, thus ceasing to serve it
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete JWT token from database
  /refresh:
    put:
      description: request with refreshToken, obtain new token for continued system
        access and operation
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.RespLogin'
      summary: Gets refreshToken and gives new Token in to work in system
  /register:
    post:
      description: Registration a new User with Confirmation
      parameters:
      - description: Register
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.UserRegister'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: UserRegister
swagger: "2.0"
